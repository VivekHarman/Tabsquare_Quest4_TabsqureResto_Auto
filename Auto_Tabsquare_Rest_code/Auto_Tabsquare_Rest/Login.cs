///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace Auto_Tabsquare_Rest
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Login recording.
    /// </summary>
    [TestModule("64b04fcc-9e2b-4408-b585-1840b174bea0", ModuleType.Recording, 1)]
    public partial class Login : ITestModule
    {
        /// <summary>
        /// Holds an instance of the Auto_Tabsquare_RestRepository repository.
        /// </summary>
        public static Auto_Tabsquare_RestRepository repo = Auto_Tabsquare_RestRepository.Instance;

        static Login instance = new Login();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Login()
        {
            CountryCode = "\\+91";
            MobileNumber = "9884616137";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Login Instance
        {
            get { return instance; }
        }

#region Variables

        string _MobileNumber;

        /// <summary>
        /// Gets or sets the value of variable MobileNumber.
        /// </summary>
        [TestVariable("94d9df42-e666-449c-94c8-b1117d9c0aad")]
        public string MobileNumber
        {
            get { return _MobileNumber; }
            set { _MobileNumber = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable CountryCode.
        /// </summary>
        [TestVariable("5cf00ce8-d6e6-44bb-a895-090291e6cbf2")]
        public string CountryCode
        {
            get { return repo.CountryCode; }
            set { repo.CountryCode = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Wait", "Waiting 5s to exist. Associated repository item: 'ApplicationUnderTest.LoginPage.CountryCodeArrow'", repo.ApplicationUnderTest.LoginPage.CountryCodeArrowInfo, new ActionTimeout(5000), new RecordItemIndex(0));
            repo.ApplicationUnderTest.LoginPage.CountryCodeArrowInfo.WaitForExists(5000);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.LoginPage.CountryCodeArrow' at Center.", repo.ApplicationUnderTest.LoginPage.CountryCodeArrowInfo, new RecordItemIndex(1));
            repo.ApplicationUnderTest.LoginPage.CountryCodeArrow.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 2s to exist. Associated repository item: 'ApplicationUnderTest.LoginPage.TextBox_CountrySearch'", repo.ApplicationUnderTest.LoginPage.TextBox_CountrySearchInfo, new ActionTimeout(2000), new RecordItemIndex(2));
            repo.ApplicationUnderTest.LoginPage.TextBox_CountrySearchInfo.WaitForExists(2000);
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute Value to '$CountryCode' on item 'ApplicationUnderTest.LoginPage.TextBox_CountrySearch'.", repo.ApplicationUnderTest.LoginPage.TextBox_CountrySearchInfo, new RecordItemIndex(3));
            repo.ApplicationUnderTest.LoginPage.TextBox_CountrySearch.Element.SetAttributeValue("Value", CountryCode);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 5s to exist. Associated repository item: 'ApplicationUnderTest.LoginPage.CountryCodeName'", repo.ApplicationUnderTest.LoginPage.CountryCodeNameInfo, new ActionTimeout(5000), new RecordItemIndex(4));
            repo.ApplicationUnderTest.LoginPage.CountryCodeNameInfo.WaitForExists(5000);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.LoginPage.CountryCodeName' at Center.", repo.ApplicationUnderTest.LoginPage.CountryCodeNameInfo, new RecordItemIndex(5));
            repo.ApplicationUnderTest.LoginPage.CountryCodeName.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'ApplicationUnderTest.LoginPage.TextBox_MobileNumber'.", repo.ApplicationUnderTest.LoginPage.TextBox_MobileNumberInfo, new RecordItemIndex(6));
            Validate.Exists(repo.ApplicationUnderTest.LoginPage.TextBox_MobileNumberInfo);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute Value to '$MobileNumber' on item 'ApplicationUnderTest.LoginPage.TextBox_MobileNumber'.", repo.ApplicationUnderTest.LoginPage.TextBox_MobileNumberInfo, new RecordItemIndex(7));
            repo.ApplicationUnderTest.LoginPage.TextBox_MobileNumber.Element.SetAttributeValue("Value", MobileNumber);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 2s.", new RecordItemIndex(8));
            Delay.Duration(2000, false);
            
            Report.Log(ReportLevel.Info, "Touch", "Touch item 'ApplicationUnderTest.LoginPage.Btn_Go' at Center", repo.ApplicationUnderTest.LoginPage.Btn_GoInfo, new RecordItemIndex(9));
            repo.ApplicationUnderTest.LoginPage.Btn_Go.Touch();
            Delay.Milliseconds(300);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 30s to exist. Associated repository item: 'ApplicationUnderTest.HomePage.DineInButton'", repo.ApplicationUnderTest.HomePage.DineInButtonInfo, new ActionTimeout(30000), new RecordItemIndex(10));
            repo.ApplicationUnderTest.HomePage.DineInButtonInfo.WaitForExists(30000);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'ApplicationUnderTest.HomePage.DineInButton'.", repo.ApplicationUnderTest.HomePage.DineInButtonInfo, new RecordItemIndex(11));
            Validate.Exists(repo.ApplicationUnderTest.HomePage.DineInButtonInfo);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Success, "User", "The User logged in successfully", new RecordItemIndex(12));
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
