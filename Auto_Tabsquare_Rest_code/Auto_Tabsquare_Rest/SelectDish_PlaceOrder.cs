///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace Auto_Tabsquare_Rest
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The SelectDish_PlaceOrder recording.
    /// </summary>
    [TestModule("3d116b80-c1e3-4b80-98e3-574d69acc2b4", ModuleType.Recording, 1)]
    public partial class SelectDish_PlaceOrder : ITestModule
    {
        /// <summary>
        /// Holds an instance of the Auto_Tabsquare_RestRepository repository.
        /// </summary>
        public static Auto_Tabsquare_RestRepository repo = Auto_Tabsquare_RestRepository.Instance;

        static SelectDish_PlaceOrder instance = new SelectDish_PlaceOrder();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public SelectDish_PlaceOrder()
        {
            ItemQuantity = "3";
            Quantity = "3";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static SelectDish_PlaceOrder Instance
        {
            get { return instance; }
        }

#region Variables

        string _ItemQuantity;

        /// <summary>
        /// Gets or sets the value of variable ItemQuantity.
        /// </summary>
        [TestVariable("0d54b9bd-105b-474a-9296-fc46a0bac715")]
        public string ItemQuantity
        {
            get { return _ItemQuantity; }
            set { _ItemQuantity = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable Quantity.
        /// </summary>
        [TestVariable("e8f1f2b1-86e8-4e03-bf3c-c4fd8805ab7d")]
        public string Quantity
        {
            get { return repo.Quantity; }
            set { repo.Quantity = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'ApplicationUnderTest.HomePage.DineInButton'.", repo.ApplicationUnderTest.HomePage.DineInButtonInfo, new RecordItemIndex(0));
            Validate.Exists(repo.ApplicationUnderTest.HomePage.DineInButtonInfo);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.HomePage.DineInButton' at Center.", repo.ApplicationUnderTest.HomePage.DineInButtonInfo, new RecordItemIndex(1));
            repo.ApplicationUnderTest.HomePage.DineInButton.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "User", "User Selected DineIn Option", new RecordItemIndex(2));
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 30s to exist. Associated repository item: 'ApplicationUnderTest.HomePage.MainCourseLogo'", repo.ApplicationUnderTest.HomePage.MainCourseLogoInfo, new ActionTimeout(30000), new RecordItemIndex(3));
            repo.ApplicationUnderTest.HomePage.MainCourseLogoInfo.WaitForExists(30000);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'ApplicationUnderTest.HomePage.MainCourseLogo'.", repo.ApplicationUnderTest.HomePage.MainCourseLogoInfo, new RecordItemIndex(4));
            Validate.Exists(repo.ApplicationUnderTest.HomePage.MainCourseLogoInfo);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 1m to exist. Associated repository item: 'ApplicationUnderTest.HomePage.Item_RicePlate'", repo.ApplicationUnderTest.HomePage.Item_RicePlateInfo, new ActionTimeout(60000), new RecordItemIndex(5));
            repo.ApplicationUnderTest.HomePage.Item_RicePlateInfo.WaitForExists(60000);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'ApplicationUnderTest.HomePage.Item_RicePlate'.", repo.ApplicationUnderTest.HomePage.Item_RicePlateInfo, new RecordItemIndex(6));
            Validate.Exists(repo.ApplicationUnderTest.HomePage.Item_RicePlateInfo);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.HomePage.Btn_AddRicePlate' at Center.", repo.ApplicationUnderTest.HomePage.Btn_AddRicePlateInfo, new RecordItemIndex(7));
            repo.ApplicationUnderTest.HomePage.Btn_AddRicePlate.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 10s to exist. Associated repository item: 'ApplicationUnderTest.HomePage.AddItem__Popup'", repo.ApplicationUnderTest.HomePage.AddItem__Popup.SelfInfo, new ActionTimeout(10000), new RecordItemIndex(8));
            repo.ApplicationUnderTest.HomePage.AddItem__Popup.SelfInfo.WaitForExists(10000);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 2s.", new RecordItemIndex(9));
            Delay.Duration(2000, false);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.HomePage.AddItem__Popup.Btn_Add' at Center.", repo.ApplicationUnderTest.HomePage.AddItem__Popup.Btn_AddInfo, new RecordItemIndex(10));
            repo.ApplicationUnderTest.HomePage.AddItem__Popup.Btn_Add.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Success, "User", "The Rice Place Item Added Successfully", new RecordItemIndex(11));
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 5s to exist. Associated repository item: 'ApplicationUnderTest.HomePage.CheckOutList'", repo.ApplicationUnderTest.HomePage.CheckOutList.SelfInfo, new ActionTimeout(5000), new RecordItemIndex(12));
            repo.ApplicationUnderTest.HomePage.CheckOutList.SelfInfo.WaitForExists(5000);
            
            ValidateDishQuantity(ValueConverter.ArgumentFromString<int>("Quantity", ItemQuantity));
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.HomePage.CheckOutList' at Center.", repo.ApplicationUnderTest.HomePage.CheckOutList.SelfInfo, new RecordItemIndex(14));
            repo.ApplicationUnderTest.HomePage.CheckOutList.Self.Click();
            Delay.Milliseconds(0);
            
            // Validate The Order is Added to the Card
            Report.Log(ReportLevel.Info, "Section", "Validate The Order is Added to the Card", new RecordItemIndex(15));
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 10s to exist. Associated repository item: 'ApplicationUnderTest.OrderPage.CartList'", repo.ApplicationUnderTest.OrderPage.CartList.SelfInfo, new ActionTimeout(10000), new RecordItemIndex(16));
            repo.ApplicationUnderTest.OrderPage.CartList.SelfInfo.WaitForExists(10000);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'ApplicationUnderTest.OrderPage.CartList.ItemRicePlace'.", repo.ApplicationUnderTest.OrderPage.CartList.ItemRicePlaceInfo, new RecordItemIndex(17));
            Validate.Exists(repo.ApplicationUnderTest.OrderPage.CartList.ItemRicePlaceInfo);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Success, "User", "Rice Place Item is added to the cart successfully", new RecordItemIndex(18));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'ApplicationUnderTest.OrderPage.CartList.Quantiy'.", repo.ApplicationUnderTest.OrderPage.CartList.QuantiyInfo, new RecordItemIndex(19));
            Validate.Exists(repo.ApplicationUnderTest.OrderPage.CartList.QuantiyInfo);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Success, "User", "Rice Place Item Quantity also added successfully", new RecordItemIndex(20));
            
            // Pyament
            Report.Log(ReportLevel.Info, "Section", "Pyament", new RecordItemIndex(21));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'ApplicationUnderTest.OrderPage.Btn_PayByCash'.", repo.ApplicationUnderTest.OrderPage.Btn_PayByCashInfo, new RecordItemIndex(22));
            Validate.Exists(repo.ApplicationUnderTest.OrderPage.Btn_PayByCashInfo);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.OrderPage.Btn_PayByCash' at Center.", repo.ApplicationUnderTest.OrderPage.Btn_PayByCashInfo, new RecordItemIndex(23));
            repo.ApplicationUnderTest.OrderPage.Btn_PayByCash.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 30s to not exist. Associated repository item: 'ApplicationUnderTest.OrderPage.LoadingItem'", repo.ApplicationUnderTest.OrderPage.LoadingItemInfo, new ActionTimeout(30000), new RecordItemIndex(24));
            repo.ApplicationUnderTest.OrderPage.LoadingItemInfo.WaitForNotExists(30000);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 30s to exist. Associated repository item: 'ApplicationUnderTest.OrderPage.OrderMessage'", repo.ApplicationUnderTest.OrderPage.OrderMessageInfo, new ActionTimeout(30000), new RecordItemIndex(25));
            repo.ApplicationUnderTest.OrderPage.OrderMessageInfo.WaitForExists(30000);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'ApplicationUnderTest.OrderPage.OrderMessage'.", repo.ApplicationUnderTest.OrderPage.OrderMessageInfo, new RecordItemIndex(26));
            Validate.Exists(repo.ApplicationUnderTest.OrderPage.OrderMessageInfo);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Success, "User", "Order Placed Successfully. Verified the message.", new RecordItemIndex(27));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'ApplicationUnderTest.OrderPage.OrderID'.", repo.ApplicationUnderTest.OrderPage.OrderIDInfo, new RecordItemIndex(28));
            Validate.Exists(repo.ApplicationUnderTest.OrderPage.OrderIDInfo);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Success, "User", "Order ID Got Created Successfully", new RecordItemIndex(29));
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
